#!/bin/bash

set -e # exit on error
set -u # exit on undefined variable
set -o pipefail # exit on error in pipe
shopt -s nullglob # expand empty globs to nothing, not to itself

readonly USAGE="

USAGE:
  send-emails FROM_EMAIL DIR_CONTAINING_EMAILS [SLEEP_BETWEEN_SENDING_EMAILS]
  
PARAMS:
  FROM_EMAIL: email address used as sender
  DIR_CONTAINING_EMAILS: the .eml files in this directory get send
  SLEEP_BETWEEN_SENDING_EMAILS: sleep between sending a previous and next email.
                                By default this value is 6 in seconds.

Some mail servers do not allow more then X emails to be send per minute.
To prevent you email account to be blocked, we sleep between sending emails.
We set the default to limit sending a maximum of 10 emails per minute.
This is a safe limit, but note that to send 100 emails this will take 10 minutes. 
"


if [[ "$#" -lt "2" || "$#" -gt "3"  ]]; then
    echo "$USAGE"
    exit 0
fi

SLEEP_BETWEEN_SENDING_EMAILS=6
if [[ "$#" -eq "3" ]]; then
    SLEEP_BETWEEN_SENDING_EMAILS="$3"
fi

from_email="$1"
from_directory="$2"


if [[ ! -d "$from_directory" ]]; then
    echo "ERROR: directory '$from_directory' does not exist" 1>&2
    exit 1
fi

for mailfile in "$from_directory"/*.eml; do
    to_email=$(basename "${mailfile%.eml}")
    printf "sending %s to %s\n" "$mailfile"  "$to_email"
    #cat $mailfile | mutt -s "subject" -- $email
    # prefer sendmail, because then also subject and recipient in mailfile which gives the ability to setup a more complete email in a file earlier
    sendmail -t -i -f "$from_email" <"$mailfile"
    sleep "$SLEEP_BETWEEN_SENDING_EMAILS" # not to overflow mail server
done
